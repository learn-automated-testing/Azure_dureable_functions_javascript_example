name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test -- --testPathIgnorePatterns=integration
        env:
          NODE_ENV: 'test'

      - name: Upload unit test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            coverage/
            .jest-cache/
          if-no-files-found: warn

  integration-tests:
    name: Integration Tests
    needs: unit-tests
    runs-on: ubuntu-latest

    services:
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000
          - 10001:10001
          - 10002:10002

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Azure Functions Core Tools
        run: npm install -g azure-functions-core-tools@4 --unsafe-perm true

      - name: Install dependencies
        run: npm ci

      - name: Wait for Azurite to be ready
        run: |
          for i in {1..20}; do
            nc -z localhost 10000 && echo "Azurite is up!" && break
            echo "Waiting for Azurite..."
            sleep 2
          done

      - name: Start Azure Functions Host
        run: |
          # Create a local.settings.json file
          echo '{
            "IsEncrypted": false,
            "Values": {
              "AzureWebJobsStorage": "UseDevelopmentStorage=true",
              "FUNCTIONS_WORKER_RUNTIME": "node"
            }
          }' > local.settings.json
          
          # Start the Functions host with Node.js runtime
          func start --no-build --port 7071 --node &
          
          # Wait for the Functions host to be ready
          for i in {1..30}; do
            if curl -s http://localhost:7071/api/health > /dev/null; then
              echo "Functions host is up!"
              break
            fi
            echo "Waiting for Functions host..."
            sleep 2
          done

      - name: Run integration tests
        run: npm test -- --testPathPattern=integration
        env:
          AzureWebJobsStorage: 'UseDevelopmentStorage=true'
          FUNCTIONS_WORKER_RUNTIME: 'node'
          NODE_ENV: 'test'

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            coverage/
            .jest-cache/
          if-no-files-found: warn
